


http://localhost:3000/assets/application.css


  font: 75% "Lucida Grande", "Trebuchet MS", Verdana, sans-serif
  
  font-style: 
    normal
    italic
    oblique
  font-variant: 
    normal 
    small-caps
  font-weight: 
    normal
    bold
    ..px
    
  text-transform: 
    capitalize
    uppercase
    lowercase    


-------------------------
        commands
-------------------------


Migrations are pending. To resolve this issue, run:

	- bin/rake db:migrate RAILS_ENV=test
  

rails generate devise:views
rails generate devise:controllers users

devise_for :users, :controllers => { :sessions => "users/sessions", :registrations => "users/registrations" }


rails g controller users
rails g controller home


-------------------------
        easy_roles
-------------------------

easy_roles :roles

class AddRoleToUser < ActiveRecord::Migration
  def self.up
    add_column :users, :roles, :string, :default => "--- ['user']"
  end

  def self.down
    remove_column :users, :roles
  end
end


adding a role to a user
  add_role 'role'
  
removing a role from a user
  remove_role 'role'
  
check to see if a user has a certain role
  has_role? 'role'
  # or
  is_role? # role being anything you like, for example 'is_admin?' or 'is_awesome?'
  
For every method above there is a bang method too.
  add_role! 'role'
  remove_role! 'role'
  
== Examples

  @user = User.first
  
  @user.add_role 'admin'
  
  @user.is_admin?
  => true
  
  @user.has_role? 'admin'
  => true
  
  @user.is_awesome?
  => false
  
  @user.add_role 'awesome'
  
  @user.is_awesome?
  => true
  
  @user.remove_role 'admin'
  

  class ApplicationController < ActionController::Base

     def admin_required
       unless current_user && current_user.is_admin?
         flash[:error] = "Sorry, you don't have access to that."
         redirect_to root_url and return false
       end
     end
   
  end

Then in your AdminsController or any controller that you only want admins to view:

  class AdminsController < ApplicationController
     before_filter :admin_required
  end


-------------------------
        Devise
-------------------------




-------------------------
        Devise
-------------------------




-------------------------
        Devise
-------------------------

rails generate devise:install

The generator will install an initializer which describes ALL Devise's configuration options and you MUST take a look at it. When you are done, you are ready to add Devise to any of your models using the generator:

rails generate devise MODEL

Replace MODEL with the class name used for the application’s users (it’s frequently `User` but could also be `Admin`). This will create a model (if one does not exist) and configure it with default Devise modules. The generator also configures your `config/routes.rb` file to point to the Devise controller.

Next, check the MODEL for any additional configuration options you might want to add, such as confirmable or lockable. If you add an option, be sure to inspect the migration file (created by the generator if your ORM supports them) and uncomment the appropriate section.  For example, if you add the confirmable option in the model, you'll need to uncomment the Confirmable section in the migration. Then run `rake db:migrate`

Next, you need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for `config/environments/development.rb`:

```ruby
config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }


-------------------------
      Active Admin
-------------------------

rails g active_admin:install User
rails g active_admin:assets

rake db:migrate
rails server

Visit `http://localhost:3000/admin` and log in as the default user:

* __User__: admin@example.com
* __Password__: password

rails generate active_admin:resource MyModel


-------------------------
        Rails g
-------------------------


Rails:
  assets
  controller
  generator
  helper
  inherited_resources_controller
  integration_test
  jbuilder
  job
  mailer
  migration
  model
  resource
  responders_controller
  scaffold
  scaffold_controller
  task

ActiveAdmin:
  active_admin:assets
  active_admin:devise
  active_admin:install
  active_admin:page
  active_admin:resource

ActiveRecord:
  active_record:devise
  active_record:easy_roles

Coffee:
  coffee:assets

DelayedJob:
  delayed_job

Devise:
  devise
  devise:controllers
  devise:install
  devise:views

EasyRoles:
  easy_roles

FactoryGirl:
  factory_girl:model

Formtastic:
  formtastic:form
  formtastic:install

Gritter:
  gritter:locale

Js:
  js:assets

Kaminari:
  kaminari:config
  kaminari:views

Mongoid:
  mongoid:devise

Paperclip:
  paperclip

Responders:
  responders:install

Rspec:
  rspec:controller
  rspec:feature
  rspec:helper
  rspec:install
  rspec:integration
  rspec:job
  rspec:mailer
  rspec:model
  rspec:observer
  rspec:scaffold
  rspec:view

TestUnit:
  test_unit:controller
  test_unit:generator
  test_unit:helper
  test_unit:integration
  test_unit:job
  test_unit:mailer
  test_unit:model
  test_unit:plugin
  test_unit:scaffold

WickedPdf:
  wicked_pdf




-------------------------
        a
-------------------------




-------------------------
        a
-------------------------

fill_in('First Name', :with => 'John')

expect(current_path).to eq(post_comments_path(post))
expect(page).to have_link('My info')
expect(page).to have_css('table tr.foo')

-------------------------
        a
-------------------------


                  Prefix Verb   URI Pattern                                   Controller#Action
          scriptures_new GET    /scriptures/new(.:format)                     scriptures#new
         scriptures_show GET    /scriptures/show(.:format)                    scriptures#show
        new_user_session GET    /users/sign_in(.:format)                      users/sessions#new
            user_session POST   /users/sign_in(.:format)                      users/sessions#create
    destroy_user_session DELETE /users/sign_out(.:format)                     users/sessions#destroy
           user_password POST   /users/password(.:format)                     devise/passwords#create
       new_user_password GET    /users/password/new(.:format)                 devise/passwords#new
      edit_user_password GET    /users/password/edit(.:format)                devise/passwords#edit
                         PATCH  /users/password(.:format)                     devise/passwords#update
                         PUT    /users/password(.:format)                     devise/passwords#update
cancel_user_registration GET    /users/cancel(.:format)                       users/registrations#cancel
       user_registration POST   /users(.:format)                              users/registrations#create
   new_user_registration GET    /users/sign_up(.:format)                      users/registrations#new
  edit_user_registration GET    /users/edit(.:format)                         users/registrations#edit
                         PATCH  /users(.:format)                              users/registrations#update
                         PUT    /users(.:format)                              users/registrations#update
                         DELETE /users(.:format)                              users/registrations#destroy
         user_scriptures GET    /users/:user_id/scriptures(.:format)          scriptures#index
                         POST   /users/:user_id/scriptures(.:format)          scriptures#create
      new_user_scripture GET    /users/:user_id/scriptures/new(.:format)      scriptures#new
     edit_user_scripture GET    /users/:user_id/scriptures/:id/edit(.:format) scriptures#edit
          user_scripture GET    /users/:user_id/scriptures/:id(.:format)      scriptures#show
                         PATCH  /users/:user_id/scriptures/:id(.:format)      scriptures#update
                         PUT    /users/:user_id/scriptures/:id(.:format)      scriptures#update
                         DELETE /users/:user_id/scriptures/:id(.:format)      scriptures#destroy
                   users GET    /users(.:format)                              users#index
                         POST   /users(.:format)                              users#create
                new_user GET    /users/new(.:format)                          users#new
               edit_user GET    /users/:id/edit(.:format)                     users#edit
                    user GET    /users/:id(.:format)                          users#show
                         PATCH  /users/:id(.:format)                          users#update
                         PUT    /users/:id(.:format)                          users#update
                         DELETE /users/:id(.:format)                          users#destroy
                 welcome GET    /home/welcome(.:format)                       home#welcome
                    root GET    /                                             home#index


